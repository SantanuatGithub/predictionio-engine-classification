#!/bin/bash

# Fail immediately on non-zero exit code.
set -e
# Fail immediately on non-zero exit code within a pipeline.
set -o pipefail
# Fail on undeclared variables.
set -u
# Debug, echo every command
#set -x

EVENTSERVER_APP_NAME=heroku-default-app

bin/addon-wait

if [ -z "$DATABASE_URL" ]
then
  echo "PredictionIO requires a DATABASE_URL to run. Exiting to await that config."
  exit
fi

# Only setup the Eventserver app once
set +e # allow non-zero exit codes
pio app show $EVENTSERVER_APP_NAME
if [ $? -eq 0 ]
then
  echo "PredictionIO Eventserver app is already setup."
  exit
fi
set -e

# Generate a new Eventserver app to collect the data
pio app new --access-key $PIO_EVENTSERVER_ACCESS_KEY $EVENTSERVER_APP_NAME | tee app-new-out.log

# Capture the new App ID
EVENTSERVER_APP_ID=`cat app-new-out.log | ruby -E utf-8:utf-8 -e 'STDOUT << /id:\s+(\w+)/i.match(STDIN.read)[1]'`

# Import sample events for training
pio import --appid $EVENTSERVER_APP_ID --input data/initial-training-events.json
